{"version":3,"names":["PI","Math","TAU","bin","value","mix","x","y","approximates","target","epsilon","abs","normalizeRad","rest","toDeg","rad","toRad","deg","avg","values","reduce","a","v","length","between","lowerBound","upperBound","inclusive","clamp","min","max","cubicBezier","t","from","c1","c2","to","term","b","c","d","round","precision","p","pow","cuberoot","solveCubic","D","sqrt","q","roots","concat","u","acos","k","cos","i","cubicBezierYForX","pa","pb","pc","pd","map","root","filter","fract","floor"],"sources":["Math.ts"],"sourcesContent":["import type { Vector } from \"./Vectors\";\n\nexport const { PI } = Math;\nexport const TAU = PI * 2;\n\n/**\n * @summary Convert a boolean value into a number.\n * This can be useful in reanimated since 0 and 1 are used for conditional statements.\n * @worklet\n */\nexport const bin = (value: boolean): 0 | 1 => {\n  \"worklet\";\n  return value ? 1 : 0;\n};\n\n/**\n * Linear interpolation\n * @param value\n * @param x\n * @param y\n * @worklet\n */\nexport const mix = (value: number, x: number, y: number) => {\n  \"worklet\";\n  return x * (1 - value) + y * value;\n};\n\n/**\n * @summary Check is value is almost equal to the target.\n * @worklet\n */\nexport const approximates = (\n  value: number,\n  target: number,\n  epsilon = 0.001\n) => {\n  \"worklet\";\n  return Math.abs(value - target) < epsilon;\n};\n\n/**\n * @summary Normalize any radian value between 0 and 2PI.\n * For example, if the value is -PI/2, it will be comverted to 1.5PI.\n * Or 4PI will be converted to 0.\n * @worklet\n */\nexport const normalizeRad = (value: number) => {\n  \"worklet\";\n  const rest = value % TAU;\n  return rest > 0 ? rest : TAU + rest;\n};\n\n/**\n * @summary Transforms an angle from radians to degrees.\n * @worklet\n */\nexport const toDeg = (rad: number) => {\n  \"worklet\";\n  return (rad * 180) / Math.PI;\n};\n\n/**\n * @summary Transforms an angle from degrees to radians.\n * @worklet\n */\nexport const toRad = (deg: number) => {\n  \"worklet\";\n  return (deg * Math.PI) / 180;\n};\n\n/**\n *\n * @summary Returns the average value\n * @worklet\n */\nexport const avg = (values: number[]) => {\n  \"worklet\";\n  return values.reduce((a, v) => a + v, 0) / values.length;\n};\n\n/**\n * @summary Returns true if node is within lowerBound and upperBound.\n * @worklet\n */\nexport const between = (\n  value: number,\n  lowerBound: number,\n  upperBound: number,\n  inclusive = true\n) => {\n  \"worklet\";\n  if (inclusive) {\n    return value >= lowerBound && value <= upperBound;\n  }\n  return value > lowerBound && value < upperBound;\n};\n\n/**\n *  @summary Clamps a node with a lower and upper bound.\n *  @example\n    clamp(-1, 0, 100); // 0\n    clamp(1, 0, 100); // 1\n    clamp(101, 0, 100); // 100\n  * @worklet\n  */\nexport const clamp = (\n  value: number,\n  lowerBound: number,\n  upperBound: number\n) => {\n  \"worklet\";\n  return Math.min(Math.max(lowerBound, value), upperBound);\n};\n\n/**\n * @description Returns the coordinate of a cubic bezier curve. t is the length of the curve from 0 to 1.\n * cubicBezier(0, p0, p1, p2, p3) equals p0 and cubicBezier(1, p0, p1, p2, p3) equals p3.\n * p0 and p3 are respectively the starting and ending point of the curve. p1 and p2 are the control points.\n * @worklet\n */\nexport const cubicBezier = (\n  t: number,\n  from: number,\n  c1: number,\n  c2: number,\n  to: number\n) => {\n  \"worklet\";\n  const term = 1 - t;\n  const a = 1 * term ** 3 * t ** 0 * from;\n  const b = 3 * term ** 2 * t ** 1 * c1;\n  const c = 3 * term ** 1 * t ** 2 * c2;\n  const d = 1 * term ** 0 * t ** 3 * to;\n  return a + b + c + d;\n};\n\n/**\n * @summary Computes animation node rounded to precision.\n * @worklet\n */\nexport const round = (value: number, precision = 0) => {\n  \"worklet\";\n  const p = Math.pow(10, precision);\n  return Math.round(value * p) / p;\n};\n\n// https://stackoverflow.com/questions/27176423/function-to-solve-cubic-equation-analytically\nconst cuberoot = (x: number) => {\n  \"worklet\";\n  const y = Math.pow(Math.abs(x), 1 / 3);\n  return x < 0 ? -y : y;\n};\n\nconst solveCubic = (a: number, b: number, c: number, d: number) => {\n  \"worklet\";\n  if (Math.abs(a) < 1e-8) {\n    // Quadratic case, ax^2+bx+c=0\n    a = b;\n    b = c;\n    c = d;\n    if (Math.abs(a) < 1e-8) {\n      // Linear case, ax+b=0\n      a = b;\n      b = c;\n      if (Math.abs(a) < 1e-8) {\n        // Degenerate case\n        return [];\n      }\n      return [-b / a];\n    }\n\n    const D = b * b - 4 * a * c;\n    if (Math.abs(D) < 1e-8) {\n      return [-b / (2 * a)];\n    } else if (D > 0) {\n      return [(-b + Math.sqrt(D)) / (2 * a), (-b - Math.sqrt(D)) / (2 * a)];\n    }\n    return [];\n  }\n\n  // Convert to depressed cubic t^3+pt+q = 0 (subst x = t - b/3a)\n  const p = (3 * a * c - b * b) / (3 * a * a);\n  const q = (2 * b * b * b - 9 * a * b * c + 27 * a * a * d) / (27 * a * a * a);\n  let roots;\n\n  if (Math.abs(p) < 1e-8) {\n    // p = 0 -> t^3 = -q -> t = -q^1/3\n    roots = [cuberoot(-q)];\n  } else if (Math.abs(q) < 1e-8) {\n    // q = 0 -> t^3 + pt = 0 -> t(t^2+p)=0\n    roots = [0].concat(p < 0 ? [Math.sqrt(-p), -Math.sqrt(-p)] : []);\n  } else {\n    const D = (q * q) / 4 + (p * p * p) / 27;\n    if (Math.abs(D) < 1e-8) {\n      // D = 0 -> two roots\n      roots = [(-1.5 * q) / p, (3 * q) / p];\n    } else if (D > 0) {\n      // Only one real root\n      const u = cuberoot(-q / 2 - Math.sqrt(D));\n      roots = [u - p / (3 * u)];\n    } else {\n      // D < 0, three roots, but needs to use complex numbers/trigonometric solution\n      const u = 2 * Math.sqrt(-p / 3);\n      const t = Math.acos((3 * q) / p / u) / 3; // D < 0 implies p < 0 and acos argument in [-1..1]\n      const k = (2 * Math.PI) / 3;\n      roots = [u * Math.cos(t), u * Math.cos(t - k), u * Math.cos(t - 2 * k)];\n    }\n  }\n\n  // Convert back from depressed cubic\n  for (let i = 0; i < roots.length; i++) {\n    roots[i] -= b / (3 * a);\n  }\n\n  return roots;\n};\n\n/**\n *  @summary Given a cubic BÃ¨zier curve, return the y value for x.\n *  @example\n    const x = 116;\n    const from = vec.create(59, 218);\n    const c1 = vec.create(131, 39);\n    const c2 = vec.create(204, 223);\n    const to = vec.create(227, 89);\n    // y= 139\n    const y = cubicBezierYForX(x, from, c1, c2, to)));\n  * @worklet\n  */\nexport const cubicBezierYForX = (\n  x: number,\n  a: Vector,\n  b: Vector,\n  c: Vector,\n  d: Vector,\n  precision = 2\n) => {\n  \"worklet\";\n  const pa = -a.x + 3 * b.x - 3 * c.x + d.x;\n  const pb = 3 * a.x - 6 * b.x + 3 * c.x;\n  const pc = -3 * a.x + 3 * b.x;\n  const pd = a.x - x;\n  // eslint-disable-next-line prefer-destructuring\n  const t = solveCubic(pa, pb, pc, pd)\n    .map((root) => round(root, precision))\n    .filter((root) => root >= 0 && root <= 1)[0];\n  return cubicBezier(t, a.y, b.y, c.y, d.y);\n};\n\nexport const fract = (x: number) => {\n  \"worklet\";\n  return x - Math.floor(x);\n};\n"],"mappings":"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"}