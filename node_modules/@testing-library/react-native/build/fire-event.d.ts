import { ReactTestInstance } from 'react-test-renderer';
import { ViewProps, TextProps, TextInputProps, PressableProps, ScrollViewProps } from 'react-native';
export declare function isTouchResponder(element: ReactTestInstance): boolean;
export declare function isEventEnabled(element: ReactTestInstance, eventName: string, nearestTouchResponder?: ReactTestInstance): boolean;
type StringWithAutoComplete<T> = T | (string & Record<never, never>);
type OnKeys<T> = keyof {
    [K in keyof T as K extends `on${infer Rest}` ? Uncapitalize<Rest> : never]: T[K];
};
type EventName = StringWithAutoComplete<OnKeys<ViewProps> | OnKeys<TextProps> | OnKeys<TextInputProps> | OnKeys<PressableProps> | OnKeys<ScrollViewProps>>;
declare function fireEvent(element: ReactTestInstance, eventName: EventName, ...data: unknown[]): undefined;
declare namespace fireEvent {
    var press: (element: ReactTestInstance, ...data: unknown[]) => undefined;
    var changeText: (element: ReactTestInstance, ...data: unknown[]) => undefined;
    var scroll: (element: ReactTestInstance, ...data: unknown[]) => undefined;
}
export default fireEvent;
