"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wrapAsync = wrapAsync;
var _reactTestRenderer = require("react-test-renderer");
var _act = require("../act");
var _flushMicroTasks = require("../flush-micro-tasks");
var _reactVersions = require("../react-versions");
/* istanbul ignore file */

/**
 * Run given async callback with temporarily disabled `act` environment and flushes microtasks queue.
 *
 * @param callback Async callback to run
 * @returns Result of the callback
 */
async function wrapAsync(callback) {
  if ((0, _reactVersions.checkReactVersionAtLeast)(18, 0)) {
    const previousActEnvironment = (0, _act.getIsReactActEnvironment)();
    (0, _act.setReactActEnvironment)(false);
    try {
      const result = await callback();
      // Flush the microtask queue before restoring the `act` environment
      await (0, _flushMicroTasks.flushMicroTasksLegacy)();
      return result;
    } finally {
      (0, _act.setReactActEnvironment)(previousActEnvironment);
    }
  }
  if (!(0, _reactVersions.checkReactVersionAtLeast)(16, 9)) {
    return callback();
  }

  // Wrapping with act for react version 16.9 to 17.x
  let result;
  await (0, _reactTestRenderer.act)(async () => {
    result = await callback();
  });

  // Either we have result or `callback` threw error
  return result;
}
//# sourceMappingURL=wrap-async.js.map