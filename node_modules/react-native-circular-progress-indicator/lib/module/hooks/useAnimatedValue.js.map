{"version":3,"names":["useCallback","useEffect","useMemo","createAnimatedPropAdapter","Easing","interpolateColor","processColor","runOnJS","useAnimatedProps","useDerivedValue","useSharedValue","withDelay","withTiming","withPause","useCircleValues","useAnimatedValue","initialValue","radius","maxValue","clockwise","startInPausedState","delay","value","duration","onAnimationComplete","activeStrokeWidth","inActiveStrokeWidth","progressFormatter","v","Math","round","strokeColorConfig","undefined","paused","animatedValue","circleCircumference","pause","play","resetAnimatedValue","animateValue","easing","linear","isFinished","reAnimate","sortedStrokeColors","sort","a","b","colors","map","item","color","values","animatedCircleProps","biggestValue","max","maxPercentage","config","strokeDashoffset","strokeColor","stroke","props","Object","keys","includes","type","payload","progressValue","animatedTextProps","text"],"sources":["useAnimatedValue.ts"],"sourcesContent":["import { useCallback, useEffect, useMemo } from 'react';\nimport {\n  createAnimatedPropAdapter,\n  Easing,\n  interpolateColor,\n  processColor,\n  runOnJS,\n  useAnimatedProps,\n  useDerivedValue,\n  useSharedValue,\n  withDelay,\n  withTiming,\n} from 'react-native-reanimated';\nimport { withPause } from 'react-native-redash';\n\nimport type { StrokeColorConfigType } from '../types';\n\nimport useCircleValues from './useCircleValues';\n\nexport interface UseAnimatedValueProps {\n  value: number;\n  initialValue?: number;\n  radius?: number;\n  duration?: number;\n  delay?: number;\n  maxValue?: number;\n  onAnimationComplete?: () => void;\n  activeStrokeWidth?: number;\n  inActiveStrokeWidth?: number;\n  clockwise?: boolean;\n  startInPausedState?: boolean;\n  valueSuffix?: string;\n  valuePrefix?: string;\n  // eslint-disable-next-line no-unused-vars\n  progressFormatter?: (v: number) => number | string;\n  strokeColorConfig?: StrokeColorConfigType[];\n}\n\ntype Config = {\n  strokeDashoffset: number;\n  stroke?: string | number;\n};\n\nexport default function useAnimatedValue({\n  initialValue = 0,\n  radius = 60,\n  maxValue = 100,\n  clockwise,\n  startInPausedState,\n  delay = 0,\n  value,\n  duration,\n  onAnimationComplete = () => null,\n  activeStrokeWidth = 10,\n  inActiveStrokeWidth = 10,\n  progressFormatter = (v: number) => {\n    'worklet';\n\n    return Math.round(v);\n  },\n  strokeColorConfig = undefined,\n}: UseAnimatedValueProps) {\n  const paused = useSharedValue(<boolean>startInPausedState);\n  const animatedValue = useSharedValue(initialValue);\n  const { circleCircumference } = useCircleValues({\n    radius,\n    activeStrokeWidth,\n    inActiveStrokeWidth,\n  });\n\n  const pause = useCallback(() => {\n    paused.value = true;\n  }, [paused]);\n\n  const play = useCallback(() => {\n    paused.value = false;\n  }, [paused]);\n\n  const resetAnimatedValue = useCallback(() => {\n    // reset the paused state to false regardless of the value of\n    // startInPausedState, as calling reAnimate is expected to restart\n    // the animation.\n    paused.value = false;\n    animatedValue.value = initialValue;\n  }, [animatedValue, initialValue, paused]);\n\n  const animateValue = useCallback(() => {\n    animatedValue.value = withPause(\n      withDelay(\n        delay,\n        withTiming(value, { duration, easing: Easing.linear }, isFinished => {\n          if (isFinished) {\n            runOnJS(onAnimationComplete)?.();\n          }\n        })\n      ),\n      paused\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [animatedValue, delay, duration, paused, value]);\n\n  const reAnimate = () => {\n    resetAnimatedValue();\n    animateValue();\n  };\n\n  const sortedStrokeColors = useMemo(() => {\n    if (!strokeColorConfig) {\n      return null;\n    }\n    return strokeColorConfig.sort((a, b) => a.value - b.value);\n  }, [strokeColorConfig]);\n\n  const colors = useMemo(() => {\n    if (!sortedStrokeColors) {\n      return null;\n    }\n    return sortedStrokeColors.map(item => item.color);\n  }, [sortedStrokeColors]);\n\n  const values = useMemo(() => {\n    if (!sortedStrokeColors) {\n      return null;\n    }\n    return sortedStrokeColors.map(item => item.value);\n  }, [sortedStrokeColors]);\n\n  const animatedCircleProps = useAnimatedProps(\n    () => {\n      let biggestValue: number = Math.max(initialValue, maxValue);\n      biggestValue = biggestValue <= 0 ? 1 : biggestValue;\n      const maxPercentage: number = clockwise\n        ? (100 * animatedValue.value) / biggestValue\n        : (100 * -animatedValue.value) / biggestValue;\n      const config: Config = {\n        strokeDashoffset:\n          circleCircumference - (circleCircumference * maxPercentage) / 100,\n      };\n      const strokeColor =\n        colors && values\n          ? interpolateColor(animatedValue.value, values, colors)\n          : undefined;\n      if (strokeColor) {\n        config.stroke = strokeColor;\n      }\n      return config;\n    },\n    [],\n    createAnimatedPropAdapter(\n      props => {\n        if (Object.keys(props).includes('stroke')) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          props.stroke = { type: 0, payload: processColor(props.stroke) };\n        }\n      },\n      ['stroke']\n    )\n  );\n\n  useEffect(() => {\n    animateValue();\n  }, [animateValue]);\n\n  const progressValue = useDerivedValue(() => {\n    return `${progressFormatter(animatedValue.value)}`;\n  });\n\n  const animatedTextProps = useAnimatedProps(() => {\n    return {\n      text: progressValue.value,\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } as any;\n  });\n\n  return {\n    animatedCircleProps,\n    animatedTextProps,\n    progressValue,\n    pause,\n    play,\n    reAnimate,\n  };\n}\n"],"mappings":"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"}