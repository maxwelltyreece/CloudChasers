{"version":3,"names":["describe","it","queryByTestId","render","expect","toBeDefined","toBeNull","title","getByText","titleText","toBeTruthy","subtitle","getByTestId","props","style","color","toBe","fontSize","fontWeight","toEqual","onAnimationCompleted","jest","fn","toHaveBeenCalledTimes"],"sources":["index.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render } from '@testing-library/react-native';\n\nimport CircularProgress from './index';\n\ndescribe('render circular progress', () => {\n  it('should render progress with minimum items', () => {\n    const { queryByTestId } = render(<CircularProgress value={50} />);\n    expect(queryByTestId('progress-bar')).toBeDefined();\n    expect(queryByTestId('progress-circle')).toBeDefined();\n    expect(queryByTestId('progress-title-text')).toBeNull();\n    expect(queryByTestId('progress-subtitle-text')).toBeNull();\n    expect(queryByTestId('progress-bar-value-prefix')).toBeNull();\n    expect(queryByTestId('progress-bar-value-suffix')).toBeNull();\n  });\n\n  it('should render the given title', () => {\n    const title = 'title';\n    const { getByText } = render(<CircularProgress value={50} title={title} />);\n    const titleText = getByText(title);\n    expect(titleText).toBeTruthy();\n  });\n\n  it('should not display progress text if showProgressValue is false', () => {\n    const { queryByTestId } = render(\n      <CircularProgress value={50} showProgressValue={false} />\n    );\n    expect(queryByTestId('progress-value')).toBeNull();\n  });\n\n  it('should not render title if title is not provided', async () => {\n    const { queryByTestId } = render(<CircularProgress value={50} />);\n    expect(queryByTestId('progress-title-text')).toBeNull();\n  });\n\n  it('should render subtitle', () => {\n    const subtitle = 'subtitle';\n    const { getByText } = render(\n      <CircularProgress value={50} subtitle={subtitle} />\n    );\n    expect(getByText(subtitle)).toBeDefined();\n  });\n\n  it('should not render subtitle if subtitle is not provided', () => {\n    const { queryByTestId } = render(<CircularProgress value={50} />);\n    expect(queryByTestId('progress-subtitle-text')).toBeNull();\n  });\n\n  it('should render the progress value in the given color', () => {\n    const { getByTestId } = render(\n      <CircularProgress value={50} progressValueColor=\"blue\" />\n    );\n    expect(getByTestId('progress-value-text').props.style[2].color).toBe(\n      'blue'\n    );\n  });\n\n  it('should render the progress value in the given style', () => {\n    const { getByTestId } = render(\n      <CircularProgress\n        value={50}\n        progressValueStyle={{ fontSize: 12, fontWeight: 'bold' }}\n      />\n    );\n    expect(getByTestId('progress-value-text').props.style[1]).toEqual({\n      fontSize: 12,\n      fontWeight: 'bold',\n    });\n  });\n\n  it('should render prefix', () => {\n    const { queryByTestId } = render(\n      <CircularProgress value={50} valuePrefix={'$'} />\n    );\n    expect(queryByTestId('progress-bar-value-prefix')).toBeDefined();\n  });\n\n  it('should render suffix', () => {\n    const { queryByTestId } = render(\n      <CircularProgress value={50} valueSuffix={'%'} />\n    );\n    expect(queryByTestId('progress-bar-value-suffix')).toBeDefined();\n  });\n\n  it('should call onAnimationComplete function', async () => {\n    const onAnimationCompleted = jest.fn();\n    render(\n      <CircularProgress\n        value={50}\n        duration={1500}\n        onAnimationComplete={onAnimationCompleted}\n      />\n    );\n    expect(onAnimationCompleted).toHaveBeenCalledTimes(1);\n  });\n});\n"],"mappings":";;AAAA;;AACA;;AAEA;;;;AAEAA,QAAQ,CAAC,0BAAD,EAA6B,MAAM;EACzCC,EAAE,CAAC,2CAAD,EAA8C,MAAM;IACpD,MAAM;MAAEC;IAAF,IAAoB,IAAAC,mBAAA,gBAAO,6BAAC,cAAD;MAAkB,KAAK,EAAE;IAAzB,EAAP,CAA1B;IACAC,MAAM,CAACF,aAAa,CAAC,cAAD,CAAd,CAAN,CAAsCG,WAAtC;IACAD,MAAM,CAACF,aAAa,CAAC,iBAAD,CAAd,CAAN,CAAyCG,WAAzC;IACAD,MAAM,CAACF,aAAa,CAAC,qBAAD,CAAd,CAAN,CAA6CI,QAA7C;IACAF,MAAM,CAACF,aAAa,CAAC,wBAAD,CAAd,CAAN,CAAgDI,QAAhD;IACAF,MAAM,CAACF,aAAa,CAAC,2BAAD,CAAd,CAAN,CAAmDI,QAAnD;IACAF,MAAM,CAACF,aAAa,CAAC,2BAAD,CAAd,CAAN,CAAmDI,QAAnD;EACD,CARC,CAAF;EAUAL,EAAE,CAAC,+BAAD,EAAkC,MAAM;IACxC,MAAMM,KAAK,GAAG,OAAd;IACA,MAAM;MAAEC;IAAF,IAAgB,IAAAL,mBAAA,gBAAO,6BAAC,cAAD;MAAkB,KAAK,EAAE,EAAzB;MAA6B,KAAK,EAAEI;IAApC,EAAP,CAAtB;IACA,MAAME,SAAS,GAAGD,SAAS,CAACD,KAAD,CAA3B;IACAH,MAAM,CAACK,SAAD,CAAN,CAAkBC,UAAlB;EACD,CALC,CAAF;EAOAT,EAAE,CAAC,gEAAD,EAAmE,MAAM;IACzE,MAAM;MAAEC;IAAF,IAAoB,IAAAC,mBAAA,gBACxB,6BAAC,cAAD;MAAkB,KAAK,EAAE,EAAzB;MAA6B,iBAAiB,EAAE;IAAhD,EADwB,CAA1B;IAGAC,MAAM,CAACF,aAAa,CAAC,gBAAD,CAAd,CAAN,CAAwCI,QAAxC;EACD,CALC,CAAF;EAOAL,EAAE,CAAC,kDAAD,EAAqD,YAAY;IACjE,MAAM;MAAEC;IAAF,IAAoB,IAAAC,mBAAA,gBAAO,6BAAC,cAAD;MAAkB,KAAK,EAAE;IAAzB,EAAP,CAA1B;IACAC,MAAM,CAACF,aAAa,CAAC,qBAAD,CAAd,CAAN,CAA6CI,QAA7C;EACD,CAHC,CAAF;EAKAL,EAAE,CAAC,wBAAD,EAA2B,MAAM;IACjC,MAAMU,QAAQ,GAAG,UAAjB;IACA,MAAM;MAAEH;IAAF,IAAgB,IAAAL,mBAAA,gBACpB,6BAAC,cAAD;MAAkB,KAAK,EAAE,EAAzB;MAA6B,QAAQ,EAAEQ;IAAvC,EADoB,CAAtB;IAGAP,MAAM,CAACI,SAAS,CAACG,QAAD,CAAV,CAAN,CAA4BN,WAA5B;EACD,CANC,CAAF;EAQAJ,EAAE,CAAC,wDAAD,EAA2D,MAAM;IACjE,MAAM;MAAEC;IAAF,IAAoB,IAAAC,mBAAA,gBAAO,6BAAC,cAAD;MAAkB,KAAK,EAAE;IAAzB,EAAP,CAA1B;IACAC,MAAM,CAACF,aAAa,CAAC,wBAAD,CAAd,CAAN,CAAgDI,QAAhD;EACD,CAHC,CAAF;EAKAL,EAAE,CAAC,qDAAD,EAAwD,MAAM;IAC9D,MAAM;MAAEW;IAAF,IAAkB,IAAAT,mBAAA,gBACtB,6BAAC,cAAD;MAAkB,KAAK,EAAE,EAAzB;MAA6B,kBAAkB,EAAC;IAAhD,EADsB,CAAxB;IAGAC,MAAM,CAACQ,WAAW,CAAC,qBAAD,CAAX,CAAmCC,KAAnC,CAAyCC,KAAzC,CAA+C,CAA/C,EAAkDC,KAAnD,CAAN,CAAgEC,IAAhE,CACE,MADF;EAGD,CAPC,CAAF;EASAf,EAAE,CAAC,qDAAD,EAAwD,MAAM;IAC9D,MAAM;MAAEW;IAAF,IAAkB,IAAAT,mBAAA,gBACtB,6BAAC,cAAD;MACE,KAAK,EAAE,EADT;MAEE,kBAAkB,EAAE;QAAEc,QAAQ,EAAE,EAAZ;QAAgBC,UAAU,EAAE;MAA5B;IAFtB,EADsB,CAAxB;IAMAd,MAAM,CAACQ,WAAW,CAAC,qBAAD,CAAX,CAAmCC,KAAnC,CAAyCC,KAAzC,CAA+C,CAA/C,CAAD,CAAN,CAA0DK,OAA1D,CAAkE;MAChEF,QAAQ,EAAE,EADsD;MAEhEC,UAAU,EAAE;IAFoD,CAAlE;EAID,CAXC,CAAF;EAaAjB,EAAE,CAAC,sBAAD,EAAyB,MAAM;IAC/B,MAAM;MAAEC;IAAF,IAAoB,IAAAC,mBAAA,gBACxB,6BAAC,cAAD;MAAkB,KAAK,EAAE,EAAzB;MAA6B,WAAW,EAAE;IAA1C,EADwB,CAA1B;IAGAC,MAAM,CAACF,aAAa,CAAC,2BAAD,CAAd,CAAN,CAAmDG,WAAnD;EACD,CALC,CAAF;EAOAJ,EAAE,CAAC,sBAAD,EAAyB,MAAM;IAC/B,MAAM;MAAEC;IAAF,IAAoB,IAAAC,mBAAA,gBACxB,6BAAC,cAAD;MAAkB,KAAK,EAAE,EAAzB;MAA6B,WAAW,EAAE;IAA1C,EADwB,CAA1B;IAGAC,MAAM,CAACF,aAAa,CAAC,2BAAD,CAAd,CAAN,CAAmDG,WAAnD;EACD,CALC,CAAF;EAOAJ,EAAE,CAAC,0CAAD,EAA6C,YAAY;IACzD,MAAMmB,oBAAoB,GAAGC,IAAI,CAACC,EAAL,EAA7B;IACA,IAAAnB,mBAAA,gBACE,6BAAC,cAAD;MACE,KAAK,EAAE,EADT;MAEE,QAAQ,EAAE,IAFZ;MAGE,mBAAmB,EAAEiB;IAHvB,EADF;IAOAhB,MAAM,CAACgB,oBAAD,CAAN,CAA6BG,qBAA7B,CAAmD,CAAnD;EACD,CAVC,CAAF;AAWD,CA1FO,CAAR"}