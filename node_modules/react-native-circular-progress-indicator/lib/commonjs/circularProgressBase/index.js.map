{"version":3,"names":["CircularProgressBase","forwardRef","props","ref","value","initialValue","circleBackgroundColor","COLORS","TRANSPARENT","radius","duration","delay","maxValue","strokeLinecap","onAnimationComplete","activeStrokeColor","GREEN","activeStrokeSecondaryColor","activeStrokeWidth","inActiveStrokeColor","BLACK_30","inActiveStrokeWidth","inActiveStrokeOpacity","clockwise","startInPausedState","rotation","dashedStrokeConfig","count","width","strokeColorConfig","undefined","children","animatedCircleProps","play","pause","reAnimate","useAnimatedValue","useImperativeHandle","styleProps","useMemo","styles","container","rotatingContainer","StyleSheet","absoluteFillObject","valueContainer"],"sources":["index.tsx"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useMemo } from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport ProgressCircle from '../components/progressCircle';\nimport useAnimatedValue from '../hooks/useAnimatedValue';\nimport COLORS from '../utils/colors';\nimport type { CircularProgressBaseProps, ProgressRef } from '../types';\n\nimport styles from './styles';\n\nconst CircularProgressBase = forwardRef<ProgressRef, CircularProgressBaseProps>(\n  (props, ref) => {\n    const {\n      value,\n      initialValue = 0,\n      circleBackgroundColor = COLORS.TRANSPARENT,\n      radius = 60,\n      duration = 500,\n      delay = 0,\n      maxValue = 100,\n      strokeLinecap = 'round',\n      onAnimationComplete = () => null,\n      activeStrokeColor = COLORS.GREEN,\n      activeStrokeSecondaryColor = null,\n      activeStrokeWidth = 10,\n      inActiveStrokeColor = COLORS.BLACK_30,\n      inActiveStrokeWidth = 10,\n      inActiveStrokeOpacity = 1,\n      clockwise = true,\n      startInPausedState = false,\n      rotation = 0,\n      dashedStrokeConfig = { count: 0, width: 0 },\n      strokeColorConfig = undefined,\n      children,\n    } = props;\n\n    const { animatedCircleProps, play, pause, reAnimate } = useAnimatedValue({\n      initialValue,\n      radius,\n      maxValue,\n      clockwise,\n      startInPausedState,\n      delay,\n      value,\n      duration,\n      onAnimationComplete,\n      activeStrokeWidth,\n      inActiveStrokeWidth,\n      strokeColorConfig,\n    });\n\n    useImperativeHandle(ref, () => ({\n      play,\n      pause,\n      reAnimate,\n    }));\n\n    const styleProps = useMemo(\n      () => ({\n        radius,\n        rotation,\n      }),\n      [radius, rotation]\n    );\n\n    return (\n      <View style={styles(styleProps).container} testID=\"progress-bar\">\n        <View style={styles(styleProps).rotatingContainer}>\n          <ProgressCircle\n            circleBackgroundColor={circleBackgroundColor}\n            radius={radius}\n            strokeLinecap={strokeLinecap}\n            activeStrokeColor={activeStrokeColor}\n            activeStrokeSecondaryColor={activeStrokeSecondaryColor}\n            activeStrokeWidth={activeStrokeWidth}\n            inActiveStrokeColor={inActiveStrokeColor}\n            inActiveStrokeWidth={inActiveStrokeWidth}\n            inActiveStrokeOpacity={inActiveStrokeOpacity}\n            animatedCircleProps={animatedCircleProps}\n            dashedStrokeConfig={dashedStrokeConfig}\n          />\n        </View>\n        <View\n          style={[\n            StyleSheet.absoluteFillObject,\n            styles(styleProps).valueContainer,\n          ]}>\n          {children}\n        </View>\n      </View>\n    );\n  }\n);\n\nexport default CircularProgressBase;\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AAGA;;;;;;;;AAEA,MAAMA,oBAAoB,gBAAG,IAAAC,iBAAA,EAC3B,CAACC,KAAD,EAAQC,GAAR,KAAgB;EACd,MAAM;IACJC,KADI;IAEJC,YAAY,GAAG,CAFX;IAGJC,qBAAqB,GAAGC,eAAA,CAAOC,WAH3B;IAIJC,MAAM,GAAG,EAJL;IAKJC,QAAQ,GAAG,GALP;IAMJC,KAAK,GAAG,CANJ;IAOJC,QAAQ,GAAG,GAPP;IAQJC,aAAa,GAAG,OARZ;IASJC,mBAAmB,GAAG,MAAM,IATxB;IAUJC,iBAAiB,GAAGR,eAAA,CAAOS,KAVvB;IAWJC,0BAA0B,GAAG,IAXzB;IAYJC,iBAAiB,GAAG,EAZhB;IAaJC,mBAAmB,GAAGZ,eAAA,CAAOa,QAbzB;IAcJC,mBAAmB,GAAG,EAdlB;IAeJC,qBAAqB,GAAG,CAfpB;IAgBJC,SAAS,GAAG,IAhBR;IAiBJC,kBAAkB,GAAG,KAjBjB;IAkBJC,QAAQ,GAAG,CAlBP;IAmBJC,kBAAkB,GAAG;MAAEC,KAAK,EAAE,CAAT;MAAYC,KAAK,EAAE;IAAnB,CAnBjB;IAoBJC,iBAAiB,GAAGC,SApBhB;IAqBJC;EArBI,IAsBF7B,KAtBJ;EAwBA,MAAM;IAAE8B,mBAAF;IAAuBC,IAAvB;IAA6BC,KAA7B;IAAoCC;EAApC,IAAkD,IAAAC,yBAAA,EAAiB;IACvE/B,YADuE;IAEvEI,MAFuE;IAGvEG,QAHuE;IAIvEW,SAJuE;IAKvEC,kBALuE;IAMvEb,KANuE;IAOvEP,KAPuE;IAQvEM,QARuE;IASvEI,mBATuE;IAUvEI,iBAVuE;IAWvEG,mBAXuE;IAYvEQ;EAZuE,CAAjB,CAAxD;EAeA,IAAAQ,0BAAA,EAAoBlC,GAApB,EAAyB,OAAO;IAC9B8B,IAD8B;IAE9BC,KAF8B;IAG9BC;EAH8B,CAAP,CAAzB;EAMA,MAAMG,UAAU,GAAG,IAAAC,cAAA,EACjB,OAAO;IACL9B,MADK;IAELgB;EAFK,CAAP,CADiB,EAKjB,CAAChB,MAAD,EAASgB,QAAT,CALiB,CAAnB;EAQA,oBACE,6BAAC,iBAAD;IAAM,KAAK,EAAE,IAAAe,eAAA,EAAOF,UAAP,EAAmBG,SAAhC;IAA2C,MAAM,EAAC;EAAlD,gBACE,6BAAC,iBAAD;IAAM,KAAK,EAAE,IAAAD,eAAA,EAAOF,UAAP,EAAmBI;EAAhC,gBACE,6BAAC,uBAAD;IACE,qBAAqB,EAAEpC,qBADzB;IAEE,MAAM,EAAEG,MAFV;IAGE,aAAa,EAAEI,aAHjB;IAIE,iBAAiB,EAAEE,iBAJrB;IAKE,0BAA0B,EAAEE,0BAL9B;IAME,iBAAiB,EAAEC,iBANrB;IAOE,mBAAmB,EAAEC,mBAPvB;IAQE,mBAAmB,EAAEE,mBARvB;IASE,qBAAqB,EAAEC,qBATzB;IAUE,mBAAmB,EAAEU,mBAVvB;IAWE,kBAAkB,EAAEN;EAXtB,EADF,CADF,eAgBE,6BAAC,iBAAD;IACE,KAAK,EAAE,CACLiB,uBAAA,CAAWC,kBADN,EAEL,IAAAJ,eAAA,EAAOF,UAAP,EAAmBO,cAFd;EADT,GAKGd,QALH,CAhBF,CADF;AA0BD,CAjF0B,CAA7B;eAoFe/B,oB"}