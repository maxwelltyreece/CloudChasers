{"version":3,"names":["AnimatedCircle","Animated","createAnimatedComponent","Circle","ProgressCircle","circleBackgroundColor","COLORS","TRANSPARENT","radius","strokeLinecap","activeStrokeColor","GREEN","activeStrokeSecondaryColor","activeStrokeWidth","inActiveStrokeColor","BLACK_30","inActiveStrokeWidth","inActiveStrokeOpacity","dashedStrokeConfig","animatedCircleProps","viewBox","useMemo","Math","max","inactiveCircleRadius","activeCircleRadius","circleCircumference","useCircleValues","maskId","count","width","undefined","strokeColor","styles","svg"],"sources":["index.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport Svg, { G, Circle } from 'react-native-svg';\nimport Animated from 'react-native-reanimated';\n\nimport useCircleValues from '../../hooks/useCircleValues';\nimport COLORS from '../../utils/colors';\nimport type { ProgressCircleProps } from '../../types';\nimport CircleGradient from '../circleGradient';\nimport DashedCircle from '../dashedCircle';\n\nimport styles from './styles';\n\nconst AnimatedCircle = Animated.createAnimatedComponent(Circle);\n\nconst ProgressCircle: React.FC<ProgressCircleProps> = ({\n  circleBackgroundColor = COLORS.TRANSPARENT,\n  radius = 60,\n  strokeLinecap = 'round',\n  activeStrokeColor = COLORS.GREEN,\n  activeStrokeSecondaryColor = null,\n  activeStrokeWidth = 10,\n  inActiveStrokeColor = COLORS.BLACK_30,\n  inActiveStrokeWidth = 10,\n  inActiveStrokeOpacity = 1,\n  dashedStrokeConfig,\n  animatedCircleProps,\n}: ProgressCircleProps) => {\n  const viewBox = useMemo(\n    () => radius + Math.max(activeStrokeWidth, inActiveStrokeWidth),\n    [radius, activeStrokeWidth, inActiveStrokeWidth]\n  );\n  const { inactiveCircleRadius, activeCircleRadius, circleCircumference } =\n    useCircleValues({\n      radius,\n      activeStrokeWidth,\n      inActiveStrokeWidth,\n    });\n\n  const maskId = useMemo(\n    () =>\n      dashedStrokeConfig &&\n      dashedStrokeConfig?.count > 0 &&\n      dashedStrokeConfig?.width > 0\n        ? 'url(#dashed-circle)'\n        : undefined,\n    [dashedStrokeConfig]\n  );\n\n  const strokeColor = useMemo(\n    () => (activeStrokeSecondaryColor ? 'url(#grad)' : activeStrokeColor),\n    [activeStrokeSecondaryColor, activeStrokeColor]\n  );\n\n  return (\n    <Svg\n      testID=\"progress-circle\"\n      width={radius * 2}\n      height={radius * 2}\n      viewBox={`0 0 ${viewBox * 2} ${viewBox * 2}`}\n      style={styles.svg}>\n      <CircleGradient\n        activeStrokeColor={activeStrokeColor}\n        activeStrokeSecondaryColor={activeStrokeSecondaryColor}\n      />\n      <DashedCircle\n        circleCircumference={circleCircumference}\n        inActiveStrokeWidth={inActiveStrokeWidth}\n        activeStrokeWidth={activeStrokeWidth}\n        inactiveCircleRadius={inactiveCircleRadius}\n        activeCircleRadius={activeCircleRadius}\n        dashedStrokeConfig={dashedStrokeConfig}\n      />\n      <G mask={maskId}>\n        <Circle\n          cx=\"50%\"\n          cy=\"50%\"\n          stroke={inActiveStrokeColor}\n          strokeWidth={inActiveStrokeWidth}\n          r={inactiveCircleRadius}\n          fill={circleBackgroundColor}\n          strokeOpacity={inActiveStrokeOpacity}\n        />\n        <AnimatedCircle\n          cx=\"50%\"\n          cy=\"50%\"\n          stroke={strokeColor}\n          strokeWidth={activeStrokeWidth}\n          r={activeCircleRadius}\n          fill={COLORS.TRANSPARENT}\n          strokeDasharray={circleCircumference}\n          strokeLinecap={strokeLinecap}\n          animatedProps={animatedCircleProps}\n        />\n      </G>\n    </Svg>\n  );\n};\n\nexport default ProgressCircle;\n"],"mappings":"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"}